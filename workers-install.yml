# configure the worker nodes and initialize the cluster
#This playbook contains the instructions that have to be executed on worker nodes.
#With the second replay, a single task executes the join command on all worker nodes.
#At the end of this activity, the two worker nodes will be part of the cluster.
#Save and close the file when done and run the playbook by running locally
# : ansible-playbook -i hosts workers.yml

---
- hosts: workers
  become: yes
  gather_facts: false

  tasks:
#---------------------- Dependencies -----------------------------------------
    - name: remove swap [swapoff -a]
      shell: "swapoff -a"

    - name: remove swap fstab
      shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: insert String in k8s.conf (modprobe br_netfilter, bridge network, iptable enable)
      become: yes
      blockinfile:
        marker: ""
        path: /etc/sysctl.d/k8s.conf
        block: |
          overlay
          br_netfilter
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        state: present
        create: yes

    - name: update sysctl
      command: sysctl --system

    - name: ufw daemon-state changes and disable
      become: yes
      ansible.builtin.systemd:
        name: ufw
        state : stopped
        enabled: no

#---------------------- Install ----------------------------------------------------------- 
  # repository  
    - name: INSTALL APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: ADD Kubernetes apt-key (google cloud public signing key)
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: ADD Kubernetes' APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'

    - name: apt update
      apt:
        update_cache: true
        cache_valid_time: 3600

# kubernetes tools
    - name: INSTALL kubelet kubernetes agent
      apt:
        name: kubelet
        state: present
        update_cache: true

    - name: INSTALL kubeadm kubernetes cluster init tool
      apt:
        name: kubeadm
        state: present

    - name: INSTALL DOCKER
      apt:
        name: docker.io
        state: present
        update_cache: true

#----------------------- Setting ---------------------------------------------------------
    - name: Docker daemon-state stopped
      become: yes
      ansible.builtin.systemd:
        name: docker
        state : stopped

    - name: create daemon.json and change Cgroup Driver cgroupfs -> systemd
      become: yes
      blockinfile:
        marker: ""
        path: /etc/docker/daemon.json
        block: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": { "max-size": "100m" },
            "storage-driver": "overlay2"
          }
        state: present
        create: yes

    - name: daemon-reload to pick up config changes
      become: yes
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Docker daemon-state restart and enable
      become: yes
      ansible.builtin.systemd:
        name: docker
        enabled: yes

    - name: Docker daemon-state restart and enable
      become: yes
      ansible.builtin.systemd:
        name: docker
        state : started
